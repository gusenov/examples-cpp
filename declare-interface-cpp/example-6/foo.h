class foo {
  public:
    foo() {;}

    // Чтобы сделать класс интерфейсом нужен чистый виртуальный метод, но
    // если все виртуальные методы имеют имплементацию по умолчанию, то
    // единственный метод остается чтобы сделать его виртуальным
    // это деструктор.
    // Реимплементация деструктора в производном классе не является большим
    // бременем.

    // Чистый виртуальный деструктор предотвращает генерацию vtable
    // Если только класс, который наследуется от вашего класса интерфейса,
    // сам по себе не унаследован.

    // Чистый виртуальный и определенный деструктор
    // class Base { public: ~Base() = 0; }; Base::~Base() {}
    // позволяет компилятору сгенерировать конструкторы по умолчанию
    // для производных классов.

    virtual ~foo() = 0;

    virtual bool overrideMe() {return false;}
};
